从不容的人的角度看，同一个数据库系统是有不同的层面的
    1. 数据库开发人员
        1. 内模式
            存储模式，物理结构和存储方式的描述，一个数据库只用一个内模式
        2. 模式
            逻辑模式
                全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图，即数据库中的模型的逻辑结构，数据库只有一个模式，通过DDL来定义模式
                    1. 与物理无依赖
                        因为内模式和模式都是唯一所以只有一个mapping
                    2. 与具体应用无依赖
                        因为外模式很多，所以模式/外模式的转换需要多个mapping
                    两级mapping来保证这种数据独立性，保证APP的最终用户的APP不需要根据物理或者逻辑变化而变化
                        因为用户多阿，为了省多个用户的改动，只能把改动集中到一起，并且分层次多级mapping
                    依赖关系：
                        内模式 => 逻辑模型即概念模型 => 现实世界
        3. 外模式
            用户模式，一部分数据，所以是整体模式的子集，因为需求、安全层级不同，所以可以有多个外模式，通过DDL来定义外模式，因为面向高层抽象，所以动态性高，变动大
    2. 使用用户，APP开发
        1. 单用户
        2. 主从
        3. 分布式
        4. Client-Server
        5. Browser-Server
type and value
    型是对某类数据的结构和属性的说明，值是型的具体异化，型是值的共性抽象。
        schema
            数据库全体数据的逻辑结构和特征的描述，型，static
        schema的具体值
            instance, 动态dynamic，因为会在型的限制下作出不在限制范围的变化
                多个不同的实例不同
                一个实例随着时间变化前后也不同
            