关系数据语言的
    模式
        运算名(输入) => 输出 {具体运算体}，
            是不是似曾相识？
            操作符（操作对象） => 输出对象 {具体运算体}
    分类
        relational algebra
            关系运算表达查询
                两类
                    1. 集合运算符，两个相同属性和域（类型相同）的集合，从tuples元素的角度，元素在relation中表现为tuple，也就是两个relation的所有行
                        产生新n个顺序属性的tuple的集合
                            intersection
                                两个集合重复的元素
                            except
                                对于第一集合拥有的元素，删掉和第二个集合重复的元素
                            union
                                两个集合所有元素合后去重
                        产生新n+m个顺序属性的tuple的集合
                            extended cartesian product
                                属性
                                    因为两个集合的元素是多个有序属性的元组，所以新的集合的元素是m+n个有序属性元组，当m和n相同时，就是2n个顺序的有序属性的元组
                                元组
                                    新结果的基数为前者tuple数乘后者tuple数
                    2. 专门运算符，从tupples和attributes的角度
                        分类
                            SELECT
                            PROJECT
                            JOIN
                            DIVISION
                        还有辅助运算符，辅助专门运算符的操作
                最小完备集
                    union except cartesian select project
                    分别是从同属性集
                        两个关系的的tuple的增加，tuple的减少，tuple的组合。
                        单关系的tuples的筛选，attribute的筛选
        relational calculus
            关系的推演表达查询
                基于元组
                基于域

关系完备性
    语言能够表示关系代数可以表达的查询，以上两种分类，具体三种都是能力等价的
SQL 
    是融合以上两种分类的语言，所以成了关系数据库的标准
    非过程化
            